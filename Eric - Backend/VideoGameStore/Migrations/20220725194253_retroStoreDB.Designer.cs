// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameStore.Models;

#nullable disable

namespace VideoGameStore.Migrations
{
    [DbContext(typeof(StoreDBContext))]
    [Migration("20220725194253_retroStoreDB")]
    partial class retroStoreDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VideoGameStore.Models.AuthenticateUser", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("AuthenticateUser");
                });

            modelBuilder.Entity("VideoGameStore.Models.CustomerContact", b =>
                {
                    b.Property<string>("userName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("userName");

                    b.Property<string>("contactNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactNo");

                    b.Property<string>("emailAddress")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("emailAddress");

                    b.HasKey("userName")
                        .HasName("pk_userName2");

                    b.ToTable("tbl_ContactInfo", (string)null);
                });

            modelBuilder.Entity("VideoGameStore.Models.Order", b =>
                {
                    b.Property<int>("orderNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderNo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderNo"), 1L, 1);

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("orderDate");

                    b.Property<string>("RegisteruserName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("orderName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("orderName");

                    b.Property<decimal?>("orderPrice")
                        .HasColumnType("money")
                        .HasColumnName("orderPrice");

                    b.Property<string>("paymentType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("paymentType");

                    b.Property<int?>("pointsEarned")
                        .HasColumnType("int")
                        .HasColumnName("pointsEarned");

                    b.HasKey("orderNo")
                        .HasName("pk_orderNo");

                    b.HasIndex("RegisteruserName");

                    b.ToTable("tbl_OrdersInfo", (string)null);
                });

            modelBuilder.Entity("VideoGameStore.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<decimal?>("productCost")
                        .HasColumnType("money")
                        .HasColumnName("productCost");

                    b.Property<string>("productGenre")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("productGenre");

                    b.Property<bool?>("productIsInStock")
                        .HasColumnType("bit")
                        .HasColumnName("productIsInStock");

                    b.Property<string>("productManufacturer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("productManufacturer");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productPlatform")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("productPlatform");

                    b.Property<int?>("productQty")
                        .HasColumnType("int")
                        .HasColumnName("productQty");

                    b.Property<int?>("productReleaseDate")
                        .HasColumnType("int")
                        .HasColumnName("productReleaseDate");

                    b.Property<string>("productType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("productType");

                    b.HasKey("productId")
                        .HasName("pk_productId");

                    b.ToTable("tbl_ProductInfo", (string)null);
                });

            modelBuilder.Entity("VideoGameStore.Models.Register", b =>
                {
                    b.Property<string>("userName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("userName");

                    b.Property<int?>("AddressZip")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<string>("customerState")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("customerState");

                    b.Property<string>("firstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("lastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("lastName");

                    b.Property<string>("stAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("stAddress");

                    b.Property<string>("userPassword")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("userPassword");

                    b.HasKey("userName")
                        .HasName("pk_userName");

                    b.ToTable("tbl_RegisterInfo", (string)null);
                });

            modelBuilder.Entity("VideoGameStore.Models.Order", b =>
                {
                    b.HasOne("VideoGameStore.Models.Register", null)
                        .WithMany("OrderList")
                        .HasForeignKey("RegisteruserName");
                });

            modelBuilder.Entity("VideoGameStore.Models.Register", b =>
                {
                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
